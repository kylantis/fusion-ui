
{{style url="/components/global_navigation/style.min.css"}}

{{component Illustration}}

{{!-- Todo: Implement Subtabs, tab dialog, Icon-only tabs, states, pinned, overflow tabs  --}}

<div style="width: 100%; height: 100%;">
<div class="slds-context-bar slds-context-bar_tabs">

  <div class="slds-context-bar__primary">

    <div
      class="slds-context-bar__item slds-context-bar__dropdown-trigger slds-dropdown-trigger slds-dropdown-trigger_click slds-no-hover">
      <div class="slds-context-bar__icon-action">

        <button 
          class="slds-button slds-context-bar__button {{useWaffleIcon ? 'slds-icon-waffle_container': ''}}"
          onclick="{{fn "onWaffleButtonClick"}}()"
          title="{{appName}}" type="button">

          {{#if useWaffleIcon}}
          {{!-- Todo: Move to a different component?? --}}
            <span class="slds-icon-waffle">
              <span class="slds-r1"></span>
              <span class="slds-r2"></span>
              <span class="slds-r3"></span>
              <span class="slds-r4"></span>
              <span class="slds-r5"></span>
              <span class="slds-r6"></span>
              <span class="slds-r7"></span>
              <span class="slds-r8"></span>
              <span class="slds-r9"></span>
            </span>

          {{else}}

          {{component Icon alias="icon"}}

          {{#if icon}}
          {{> icon}}
          {{/if}}

          {{/if}}

          <span class="slds-assistive-text">Open App Launcher</span>
        </button>

      </div>

      <span class="slds-context-bar__label-action slds-context-bar__app-name">
        <span class="slds-truncate" title="{{appName}}">{{appName}}</span>
      </span>
    </div>

  </div>


  <nav class="slds-context-bar__secondary">

    <div class="slds-context-bar__vertical-divider"></div>

    <ul class="slds-grid" role="tablist">

    {{#each tabs hook='tabHook' hookPhase='afterMount' as |tab tabIndex|}}

      {{component Menu alias="subMenu"}}
      {{component alias="content"}}
      {{component Icon alias="icon"}}

      {{#if ../useDivider }}
        <div class="slds-context-bar__item--divider-left"></div>
      {{/if}}

      <li
        class="
        slds-context-bar__item slds-context-bar__item_tab slds-context-bar__dropdown-trigger slds-dropdown-trigger 
        {{ ../expandOnHover ? "" : "slds-dropdown-trigger_click"}}

        {{!-- 
            Note: When the feedbackState is dynamically updated, the developer needs to also update the icons
            respectively. For more info, see the conditions used below in rendering the icons.
                
            UPDATE: Todo: Add data-bind support for the paramerters of inline components, so that the developer
            do not have to do the above, which quite frankly is an anti-pattern and against what we are trying to achieve
        --}}
        {{feedbackState ? 'slds-has-${feedbackState}' : ''}}
        "
        identifier="{{identifier}}" role="presentation">

        <a class="slds-context-bar__label-action" title="{{title}}">
          
          {{#if icon}}
            {{> icon 
                marginRight=((isSolidIcon icon) ? 'x-small' : null)
                useCurrentColor=(feedbackState eq 'warning') 
                on-solidStateChange='onTabIconSolidStateChange' 
            }}
          {{/if}}

          {{#if assistiveText}}
            <span class="slds-assistive-text">{{assistiveText}}</span>
          {{/if}}

          <span class="slds-truncate" title="{{title}}">{{title}}</span>
        </a>

        <div
          class="slds-context-bar__icon-action slds-p-left_none slds-p-right_none trigger-submenu"
          style="{{(subMenu and (not ../expandOnHover)) ? "" : "visibility: hidden;"}}">
            {{> ButtonIcon 
                  iconType='utility' 
                  iconName='chevrondown'
                  container=true
                  size='x-small'
                  title="Show submenu" 
                  useCurrentColor=(not feedbackState or (feedbackState eq 'warning'))
                  type=((feedbackState and (not (feedbackState eq 'warning'))) ? 'inverse' : null)
                  ref="tab-${identifier}-submenuTrigger-button"
            }}
        </div>

        {{#if subMenu}}
          {{> subMenu }}
        {{/if}}

        {{#if closeable}}
        <div class="slds-context-bar__icon-action slds-col_bump-left slds-p-left_none trigger-close">
            {{> ButtonIcon
                  iconType='utility' 
                  iconName='close' 
                  container=true
                  size='x-small'
                  title="Close Tab" 
                  useCurrentColor=(not feedbackState or (feedbackState eq 'warning'))
                  type=((feedbackState and (feedbackState neq 'warning')) ? 'inverse' : null)
                  ref="tab-${identifier}-close-button"
            }}
        </div>
        {{/if}}

      </li>

    {{/each}}

    </ul>
  </nav>

</div>

<div class="content" style="height: 100%;"></div>

  {{> Spinner ref="spinner" }}

</div>
