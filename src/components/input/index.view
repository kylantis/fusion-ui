{{style url="/components/input/style.min.css"}}

{{var hasLeftIcon = (not readonly and leftIcon)}}
{{var hasRightIcon = (not readonly and rightIcon and (not rightButton))}}
{{var hasRightButton = (not readonly and rightButton)}}

{{var hasRightIconOrButton = (hasRightIcon or hasRightButton)}}

{{#*inline "render_input_element" eager=true}}
    <input type="{{type}}" id="{{@root.componentId}}_input"
      {{required ? "required=''" : "" }}
      class="slds-input {{(not readonly and hasWidget) ? "hasWidget" : ""}}"
      style="{{readonly ? 'box-shadow: none;' : ''}}"
      {{(value and not hasWidget) ? "value=\"${value}\"" : "" }}
      {{required ? "required=''" : "" }}
      {{disabled ? "disabled=''" : "" }}
      {{(readonly or hasWidget) ? "readonly=''" : "" }}
      {{hasWidget ? "aria-controls='${getWidgetElementId}'" : ""}}
      {{message ? "aria-describedby=\"${@root.componentId}_message\"" : "" }}
      {{error ? "aria-invalid=\"true\"" : ""}}
      {{(not readonly and placeholder) ? "placeholder=\"${placeholder}\"" : ""}}
      onchange="{{fn "onChange"}}(event)"
    >
{{/inline}}

{{#*inline "standalone_control_classes"}}
  {{!-- Note: Notice how we are using a ternary expression instead of a #if block. If an #if block is used,
  data binding will not be orchestrated because this decorator is rendered in a html attribute context --}}
  {{var iconPosition = ((hasLeftIcon and hasRightIconOrButton) ? "left-right" : hasLeftIcon ? "left" : "right") }}

  {{(not readonly and (hasLeftIcon or hasRightIconOrButton)) ? "slds-input-has-icon slds-input-has-icon_${iconPosition}" : ""}}
{{/inline}}

{{#*inline "render_standalone_control" eager=true}}

  {{#if hasLeftIcon}}
    {{> IconSvg type="utility" name=leftIcon cssClass="slds-input__icon slds-input__icon_left"}}
  {{/if}}

  {{#if hasRightIcon}}
    {{> IconSvg type="utility" name=rightIcon cssClass="slds-input__icon slds-input__icon_right"}}
  {{/if}}

  {{> render_input_element}}

    {{#if hasRightButton }}
      {{var clearButton = (rightButton eq 'clear')}}

      {{> ButtonIcon 
            disabled
            iconType='utility' iconName=rightButton
            cssClass="slds-input__icon slds-input__icon_right" 
            svgForeground=(clearButton ? "text-light" : null)
            on-click=(clearButton ? "clearInput" : null)
            assistiveText="Clear" title="Clear"
            ref="rightButton"
      }}
    {{/if}}

{{/inline}}

{{> render_standalone }}